# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on: [push, pull_request]

env:
  TERM: xterm

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macOS-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9, 3.10.0, 3.11.0, 3.12.0]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Installation
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Run1
      run: |
        python -m mytimer --minute=1 --second=1 --message="Test Message"
    - name: Run2
      run: |
        python -m mytimer --minute=0 --second=10 --countdown
    - name: Run3
      run: |
        mytimer --minute=0 --second=10 --countup --alarm --face=4
    - name: Run4
      run: |
        mytimer --program=poached-egg
    - name: Run5
      run: |
        mytimer --minute=0 --second=10 --countup --alarm --face=4 --tone=6
    - name: Run6
      run: |
        mytimer --minute=0 --second=5 --countdown --alarm --face=3 --tone=2 --alarm-repeat=5
    - name: Run7
      run: |
        mytimer --programs-list
    - name: Run8
      run: |
        mytimer --faces-list
    - name: Run9
      run: |
        mytimer --minute=0 --second=5 --countdown --h-shift=10 --v-shift=12
    - name: Install dev-requirements
      run: |
        python otherfiles/requirements-splitter.py
        pip install --upgrade --upgrade-strategy=only-if-needed -r test-requirements.txt
    - name: Version check
      run: |
        python otherfiles/version_check.py
      if: matrix.python-version == 3.8
    - name: Other tests
      run: |
        python -m vulture mytimer/ setup.py --min-confidence 65 --exclude=__init__.py --sort-by-size
        python -m bandit -r mytimer -s B404,B603,B605,B607
        python -m pydocstyle --match-dir=mytimer -v
      if: matrix.python-version == 3.8
    - name: Accuracy (Windows)
      run: |
        Measure-Command {mytimer --minute=1 --second=40}
      if: matrix.os == 'windows-latest'
    - name: Accuracy (Ubuntu / macOS)
      run: |
        time mytimer --minute=1 --second=40
      if: matrix.os != 'windows-latest'
